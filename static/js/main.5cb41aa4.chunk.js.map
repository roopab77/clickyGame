{"version":3,"sources":["components/ImageCard/ImageCard.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["styles","image","width","height","margin","padding","ImageCard","props","react_default","a","createElement","className","value","id","onClick","handleClick","alt","name","src","style","navbar","backgroundColor","minHeight","fontsize","Navbar","rightWrong","score","jumbotron","backgroundRepeat","backgroundSize","backgroundPosition","backgroundBlendMode","display","alignItems","justifyContent","App","state","images","clicked","_this","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledImages","array","i","length","j","Math","floor","random","_ref","shuffleImages","friends","_this2","this","components_Navbar_Navbar","map","components_ImageCard_ImageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5cb41aa4.chunk.js","sourcesContent":["import React from \"react\";\nconst styles = {\n  image: {\n    width: \"210px\",\n    height: \"210px\",\n    margin:\"14px\",\n    padding:\"10px\"\n  }\n}\n\nconst ImageCard = props => (\n  <div className=\"card\" value={props.id} onClick={()=>props.handleClick(props.id)}>\n    <div className=\"img-container \">\n      <img className= \"rounded\" alt={props.name} src={props.image} style={styles.image} />\n    </div>  \n   \n  </div>\n);\n\nexport default ImageCard;\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  navbar: {\r\n    backgroundColor: \"#655931\",\r\n    minHeight: \"8vh\",\r\n    fontsize: \"16px\"   \r\n  }\r\n\r\n}\r\nconst Navbar = props =>(\r\n  <nav className=\"navbar navbar-expand-lg  text-light\" style={styles.navbar}>\r\n     <div className=\"col-6 \"><h4>Test Your Memory</h4></div>\r\n     <div className=\"col-4\"><h4>{props.rightWrong}</h4></div>\r\n     <div className=\"col-2\"><h4>Score: {props.score}</h4></div>\r\n    \r\n  </nav>\r\n \r\n);\r\nexport default Navbar;\r\n\r\n\r\n","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard/ImageCard\";\nimport images from \"./images.json\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nconst styles = {\n  jumbotron: {    \n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center top\",\n    backgroundBlendMode: \"multiply\",\n    backgroundColor: \"#9ebeaf\",\n    minHeight: \"16vh\",\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n\n}\nfunction shuffleImages(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n  // Setting this.state.images to the images json array\n  state = {\n    images,    \n    score: 0,    \n    rightWrong: \"\",\n    clicked: [],\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.score + 1;\n    this.setState({\n      score: newScore ,\n      rightWrong :\"\"     \n    });   \n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    \n    this.setState({\n      score: 0,\n      rightWrong : \"Wrong Hit... Score has been Reset!!!\",      \n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledImages = shuffleImages(images);\n    this.setState({ friends: shuffledImages });\n  };\n\n\n\n  // Map over this.state.images and render a ImageCard component for each image object\n  render() {\n    return (\n  \n      <div>\n        <Navbar \n        score={this.state.score}       \n        rightWrong={this.state.rightWrong}\n        ></Navbar>\n        <div className=\"jumbotron jumbotron-fluid text-center p-4\" style={styles.jumbotron}>\n        <h1 className=\"display-4 text-light\">Thanks Giving Memory Game!</h1>\n        </div>\n        <h3>Click on each card without hitting duplicates and Score!!!! </h3>\n        <div className=\"row\">\n        {this.state.images.map(image => (\n          <ImageCard              \n            id={image.id}\n            key={image.id}           \n            image={image.image}  \n            handleClick={this.handleClick}\n            handleIncrement={this.handleIncrement}\n            handleReset={this.handleReset}\n            handleShuffle={this.handleShuffle}         \n          />\n        ))}\n           \n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}